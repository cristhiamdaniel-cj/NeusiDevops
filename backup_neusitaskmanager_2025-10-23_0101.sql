--
-- PostgreSQL database dump
--

\restrict M6LU1TEjhYxSNPFpifHr3kZqfbylbhj34PSeIoQCkBEqQusnJQdNXCzlnK7iEwh

-- Dumped from database version 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1)
-- Dumped by pg_dump version 16.10 (Ubuntu 16.10-0ubuntu0.24.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO jorge_user;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO jorge_user;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO jorge_user;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO jorge_user;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO jorge_user;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO jorge_user;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_daily; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_daily (
    id bigint NOT NULL,
    fecha date NOT NULL,
    que_hizo_ayer text NOT NULL,
    que_hara_hoy text NOT NULL,
    impedimentos text,
    integrante_id bigint NOT NULL,
    hora time without time zone NOT NULL,
    fuera_horario boolean NOT NULL
);


ALTER TABLE public.backlog_daily OWNER TO jorge_user;

--
-- Name: backlog_daily_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_daily ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_daily_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_epica; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_epica (
    id bigint NOT NULL,
    titulo character varying(200) NOT NULL,
    descripcion text NOT NULL,
    estado character varying(20) NOT NULL,
    prioridad character varying(10) NOT NULL,
    creada_en timestamp with time zone NOT NULL,
    actualizada_en timestamp with time zone NOT NULL,
    owner_id bigint,
    avance_manual smallint,
    codigo character varying(20),
    documentos_url character varying(200) NOT NULL,
    fecha_fin date,
    fecha_inicio date,
    kpis text NOT NULL,
    proyecto_id bigint,
    CONSTRAINT backlog_epica_avance_manual_check CHECK ((avance_manual >= 0))
);


ALTER TABLE public.backlog_epica OWNER TO jorge_user;

--
-- Name: backlog_epica_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_epica ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_epica_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_epica_owners; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_epica_owners (
    id bigint NOT NULL,
    epica_id bigint NOT NULL,
    integrante_id bigint NOT NULL
);


ALTER TABLE public.backlog_epica_owners OWNER TO jorge_user;

--
-- Name: backlog_epica_owners_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_epica_owners ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_epica_owners_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_epica_sprints; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_epica_sprints (
    id bigint NOT NULL,
    epica_id bigint NOT NULL,
    sprint_id bigint NOT NULL
);


ALTER TABLE public.backlog_epica_sprints OWNER TO jorge_user;

--
-- Name: backlog_epica_sprints_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_epica_sprints ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_epica_sprints_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_evidencia; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_evidencia (
    id bigint NOT NULL,
    comentario text,
    archivo character varying(100),
    tarea_id bigint NOT NULL,
    actualizado_en timestamp with time zone,
    creado_en timestamp with time zone,
    creado_por_id integer
);


ALTER TABLE public.backlog_evidencia OWNER TO jorge_user;

--
-- Name: backlog_evidencia_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_evidencia ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_evidencia_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_integrante; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_integrante (
    id bigint NOT NULL,
    rol character varying(100) NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.backlog_integrante OWNER TO jorge_user;

--
-- Name: backlog_integrante_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_integrante ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_integrante_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_proyecto; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_proyecto (
    id bigint NOT NULL,
    codigo character varying(30) NOT NULL,
    nombre character varying(150) NOT NULL,
    activo boolean NOT NULL,
    creado_en timestamp with time zone NOT NULL,
    actualizado_en timestamp with time zone NOT NULL
);


ALTER TABLE public.backlog_proyecto OWNER TO jorge_user;

--
-- Name: backlog_proyecto_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_proyecto ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_proyecto_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_sprint; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_sprint (
    id bigint NOT NULL,
    inicio date NOT NULL,
    fin date NOT NULL,
    nombre character varying(50) NOT NULL
);


ALTER TABLE public.backlog_sprint OWNER TO jorge_user;

--
-- Name: backlog_sprint_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_sprint ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_sprint_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_tarea; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_tarea (
    id bigint NOT NULL,
    titulo character varying(200) NOT NULL,
    descripcion text NOT NULL,
    categoria character varying(4) NOT NULL,
    completada boolean NOT NULL,
    asignado_a_id bigint,
    sprint_id bigint NOT NULL,
    criterios_aceptacion text NOT NULL,
    fecha_cierre timestamp with time zone,
    informe_cierre character varying(100),
    estado character varying(20) NOT NULL,
    epica_id bigint,
    esfuerzo_sp smallint,
    CONSTRAINT backlog_tarea_esfuerzo_sp_check CHECK ((esfuerzo_sp >= 0))
);


ALTER TABLE public.backlog_tarea OWNER TO jorge_user;

--
-- Name: backlog_tarea_asignados; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.backlog_tarea_asignados (
    id bigint NOT NULL,
    tarea_id bigint NOT NULL,
    integrante_id bigint NOT NULL
);


ALTER TABLE public.backlog_tarea_asignados OWNER TO jorge_user;

--
-- Name: backlog_tarea_asignados_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_tarea_asignados ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_tarea_asignados_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: backlog_tarea_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.backlog_tarea ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.backlog_tarea_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: disponibilidad_disponibilidaddia; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.disponibilidad_disponibilidaddia (
    id bigint NOT NULL,
    dia_semana integer NOT NULL,
    tipo character varying(1) NOT NULL,
    hora_inicio time without time zone,
    hora_fin time without time zone,
    notas character varying(255) NOT NULL,
    disponibilidad_id bigint NOT NULL
);


ALTER TABLE public.disponibilidad_disponibilidaddia OWNER TO jorge_user;

--
-- Name: disponibilidad_disponibilidaddia_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.disponibilidad_disponibilidaddia ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.disponibilidad_disponibilidaddia_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: disponibilidad_disponibilidadsemanal; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.disponibilidad_disponibilidadsemanal (
    id bigint NOT NULL,
    semana_inicio date NOT NULL,
    creado timestamp with time zone NOT NULL,
    actualizado timestamp with time zone NOT NULL,
    usuario_id integer NOT NULL
);


ALTER TABLE public.disponibilidad_disponibilidadsemanal OWNER TO jorge_user;

--
-- Name: disponibilidad_disponibilidadsemanal_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.disponibilidad_disponibilidadsemanal ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.disponibilidad_disponibilidadsemanal_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO jorge_user;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO jorge_user;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO jorge_user;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: jorge_user
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: jorge_user
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO jorge_user;

--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add sprint	1	add_sprint
2	Can change sprint	1	change_sprint
3	Can delete sprint	1	delete_sprint
4	Can view sprint	1	view_sprint
5	Can add integrante	2	add_integrante
6	Can change integrante	2	change_integrante
7	Can delete integrante	2	delete_integrante
8	Can view integrante	2	view_integrante
9	Can add tarea	3	add_tarea
10	Can change tarea	3	change_tarea
11	Can delete tarea	3	delete_tarea
12	Can view tarea	3	view_tarea
13	Can add evidencia	4	add_evidencia
14	Can change evidencia	4	change_evidencia
15	Can delete evidencia	4	delete_evidencia
16	Can view evidencia	4	view_evidencia
17	Can add daily	5	add_daily
18	Can change daily	5	change_daily
19	Can delete daily	5	delete_daily
20	Can view daily	5	view_daily
21	Can add epica	6	add_epica
22	Can change epica	6	change_epica
23	Can delete epica	6	delete_epica
24	Can view epica	6	view_epica
25	Can add proyecto	7	add_proyecto
26	Can change proyecto	7	change_proyecto
27	Can delete proyecto	7	delete_proyecto
28	Can view proyecto	7	view_proyecto
29	Can add log entry	8	add_logentry
30	Can change log entry	8	change_logentry
31	Can delete log entry	8	delete_logentry
32	Can view log entry	8	view_logentry
33	Can add permission	9	add_permission
34	Can change permission	9	change_permission
35	Can delete permission	9	delete_permission
36	Can view permission	9	view_permission
37	Can add group	10	add_group
38	Can change group	10	change_group
39	Can delete group	10	delete_group
40	Can view group	10	view_group
41	Can add user	11	add_user
42	Can change user	11	change_user
43	Can delete user	11	delete_user
44	Can view user	11	view_user
45	Can add content type	12	add_contenttype
46	Can change content type	12	change_contenttype
47	Can delete content type	12	delete_contenttype
48	Can view content type	12	view_contenttype
49	Can add session	13	add_session
50	Can change session	13	change_session
51	Can delete session	13	delete_session
52	Can view session	13	view_session
53	Can add disponibilidad semanal	14	add_disponibilidadsemanal
54	Can change disponibilidad semanal	14	change_disponibilidadsemanal
55	Can delete disponibilidad semanal	14	delete_disponibilidadsemanal
56	Can view disponibilidad semanal	14	view_disponibilidadsemanal
57	Can add disponibilidad dia	15	add_disponibilidaddia
58	Can change disponibilidad dia	15	change_disponibilidaddia
59	Can delete disponibilidad dia	15	delete_disponibilidaddia
60	Can view disponibilidad dia	15	view_disponibilidaddia
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$1000000$Ah4MN4MbEzJd08HFeSmTet$5j0U8JZrZ2SanLM/JoSmw/LJzRNgXiJ4l/5nQ45QxNQ=	2025-10-21 15:27:24.706+00	t	daniel	Daniel	Campos		t	t	2025-09-30 12:31:56.077+00
2	pbkdf2_sha256$1000000$3x8NP1ojdY5AYB44sU09Uq$7Pzl+W4HIWDZAhLTG8mYptWBrZTRgATonhGGJKTw1uE=	2025-10-21 03:08:29.554+00	f	laura	Laura	Rivera		f	t	2025-09-30 12:33:22.299+00
4	pbkdf2_sha256$1000000$HQVUfspAfr85WN1RkXpUZy$ai58aYy51p7MdLhsaY+OH3z4dA9u7y0sEoTy8+AHdGg=	2025-10-14 15:48:42.129+00	f	andres_gomez	Andrés	Gómez		f	t	2025-09-30 12:48:15.013+00
5	pbkdf2_sha256$1000000$5RJnx593qpvWwvUdCHhNQD$sKVfbfvrxYHGUbmQdQvoFIlyjuhC4NuxV8lLbPGg+Y4=	2025-10-17 13:22:38.904+00	f	andres_gonzalez	Andrés	González		f	t	2025-09-30 12:48:15.233+00
6	pbkdf2_sha256$1000000$HKRuEJOhvOk66Wis9S4Nn7$jJONo4Oc4Orl4ZvrExzfV6lz38dNQ6HXObcXTiWvTjE=	2025-10-16 13:48:05.215+00	f	christian	Christian	Jiménez		f	t	2025-09-30 12:48:15.457+00
7	pbkdf2_sha256$1000000$H9GgdVIz91vpknaa66n458$1j1n1akx8XhF/0zSFFgtV3xAePZQ1UTNuU9JlFDHW4g=	2025-10-22 05:08:06.205+00	f	daniela	Daniela	Mazuera		f	t	2025-09-30 12:48:15.681+00
8	pbkdf2_sha256$1000000$il9MqVBtKvP4OckPwubron$qyjG72ErPRQhi+BuHvEExsC3sIat/g3fDwxtIgGj/kw=	2025-10-22 05:38:51.809+00	f	juan	Juan	Santa María		f	t	2025-09-30 12:48:16.338+00
9	pbkdf2_sha256$1000000$mbzxK0qJpFnsSlF1ndotfN$4PiSf5X8t/x2CqZvg2Svn/thzHMM60BH9KQwEcIlTNs=	2025-10-02 19:02:14.492+00	f	samir	Samir	Sánchez		f	t	2025-09-30 12:48:16.785+00
11	pbkdf2_sha256$1000000$IKI7WRLvwbENWkKsXGlV54$VCrB10HWCsLZIwWA4PGp1/T/glv+/Ji9hXAiW4hoiHw=	2025-10-21 14:16:53.107+00	f	jorge_coofisam				f	t	2025-10-15 22:34:43+00
12	pbkdf2_sha256$1000000$clTvR9ELPLMXijMufcuAVD$a1FbVX16TyJOP+xhl5tlRupTYgCrxJCYYxP+lQVhEtY=	2025-10-22 12:55:04.524+00	f	alex_aguilar	Javier Alexander	Aguilar		f	t	2025-10-16 20:02:47+00
3	pbkdf2_sha256$1000000$UankmOhRGCG5GQRPZPchuq$fBFNQrO/vr/Wf+2rAmhTU9DCW5RKz0iUXeMSd4oYcKI=	2025-10-23 00:12:42.207032+00	f	diana	Diana	Marín		f	t	2025-09-30 12:33:22.306+00
13	pbkdf2_sha256$1000000$EH2N52ELuVGizfNPUxvf41$xg7dUbbrgmyE9GngPzKNIqP/XfYFQeWc3mOTj2aUvnA=	2025-10-23 00:14:42.455628+00	t	jorge_admin				t	t	2025-10-21 13:34:37.101+00
10	pbkdf2_sha256$1000000$I4QgZITy6EbUimMqSmvudw$MDnnEWhNPn5UY/qLd35GDdLgF1uPI0tzw08g/KT45nA=	2025-10-23 00:22:39.622208+00	f	jorge_cardona	Jorge	Cardona		f	t	2025-10-11 18:21:36+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: backlog_daily; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_daily (id, fecha, que_hizo_ayer, que_hara_hoy, impedimentos, integrante_id, hora, fuera_horario) FROM stdin;
111	2025-10-21	Reunirme con Jorge y preparár todo para la versión 2	Hacer cambios en la versión 1 y adelantar las tareas	Ninguna	10	13:13:28.609	f
112	2025-10-21	crean y se organiza tabla de y se carga datos de ejecución presupuestal	iniciar con la estructura de finanzas de bd		17	13:26:44.742	f
113	2025-10-21	Repositorio código versión 2 NeusiTask , Reunión con Juan para afinar detalles y enlistar pendientes.	Ajuste anexos de nuevos Roles , para agregar permisos .dependiendo de tiempo , revisare la parte de disponibilidad de neusitask version 1.	Hoy mi tiempo disponible depende de la carga de incidencias del otro trabajo.AK	14	13:48:33	f
114	2025-10-21	realice consulta en bancia para solucionar los temas tecnicos de la pagina pse, realizamos consulta en banco caja social para realizar la apertura de la cuenta empresarial, se ingresaron epicas e historias de cofisam 360, daniela mazuera, laura rivera, jorgue	se subiran tareas de diana marin, andres gomez, andres gonzalez, samir, daniel campos, juan y cristhian	ninguno	2	13:59:23.086	f
115	2025-10-22	Se adaptan los roles asignados, se ajusta código para acceso, revisión disponibilidad.	Conexión Postgress Rama para Pruebas antes de pasar a principal		14	12:39:03.118	f
116	2025-10-22	revisando la documentación de financiera y echando  análisis de el contexto  principal de la data y  lo que esta expuesto para poder crear una bd mas robusta	reunirme con daniel para analizar  el  Backlog  con  daniel y entenderlo, y continuar con Crear estructuras BD para Cartera, Crédito y Gestión Documental	analizar las dimensiones de las solicitudes	17	13:02:01.449	f
117	2025-10-22	Me reunio con una comercial propietaria de una empresa de tecnologia fuerte en temas de automatizacion que busca conversar con Neusi. Continue con la actualizacion de leads	Hablar con Daniela para el tema de redes	Se requiere compra de linea corporrativa para el whatsapp bussines	4	14:12:31.582	t
118	2025-10-22	Ayer terminé de modificar todas las visitas	Iniciaré con el documento de fronted	La retroalimentación de las visitas	10	15:15:24.321	t
119	2025-10-22	estuve en capacitacion de CCB, se realizaron adecuaciones a las tyareas de neusi task y se reviso documentacion emitida por el banco caja social	cambio de historias de alex y envio de documentos del banco caja social	ninguno	2	15:24:20.964	t
\.


--
-- Data for Name: backlog_epica; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_epica (id, titulo, descripcion, estado, prioridad, creada_en, actualizada_en, owner_id, avance_manual, codigo, documentos_url, fecha_fin, fecha_inicio, kpis, proyecto_id) FROM stdin;
14	Arquitectura Integral y Ecosistema Inteligente	Unificar la arquitectura técnica de NEUSI (.100/.101/.102), definiendo blueprint. Implementar un ecosistema estable y conectado entre los sistemas NEUSI (NEUCONTA, NEUADMIN, etc.)	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:34:34.186+00	13	0	EPICA-001		2025-12-22	2025-10-14	Ecosistema 100% integrado y operativo en entorno .100	16
15	Plataforma Coofisam360 (Web + BI)	Desarrollar e integrar módulos web y tableros Power BI del sistema Coofisam360. Consolidar backend, frontend y analítica en una sola arquitectura funcional.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:47:00.152+00	15	0	EPICA-002		2025-12-22	2025-10-14	Entrega completa del sistema validado por el cliente	6
16	NEUCONTA: Sistema Contable y Financiero	Migrar contabilidad desde Siigo Nube, diseñar módulos contables y dashboards financieros. Digitalizar procesos contables y proyectar plan económico 2026.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:33:27.26+00	1	0	EPICA-003		2025-12-22	2025-10-14	Sistema NEUCONTA operativo con reportes validados	17
17	NEUADMIN: Gestión Humana y Administrativa	Estandarizar procesos administrativos y automatizar tareas internas con n8n. Implementar un sistema institucional de roles, políticas y mejora continua.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:39:31.188+00	2	0	EPICA-004		2025-12-22	2025-10-14	Procesos administrativos automatizados y validados	7
18	NEUVIBE: Comunicación y Marca	Fortalecer la identidad visual y presencia digital de NEUSI. Rediseñar la marca y desplegar web institucional moderna con analítica.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:35:32.875+00	7	0	EPICA-005		2025-12-22	2025-10-14	Web publicada y engagement >5%	8
19	NeoSales: Crecimiento Comercial	Implementar sistema comercial y estrategia de posicionamiento NEUSI. Desarrollar embudo de ventas, base de leads y alianzas.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:36:23.25+00	4	0	EPICA-006		2025-12-22	2025-10-14	15 leads, 3 reuniones efectivas, 1 alianza cerrada	5
20	Task Manager: Gestión Ágil Interna	Desarrollar versión 2.0 del NEUSI Task Manager con backend Django REST y frontend Next.js. Consolidar una plataforma interna de gestión ágil y control de tareas.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 15:19:30.288+00	14	0	EPICA-007		2025-12-22	2025-10-14	Task Manager operativo y documentado al cierre 2025	4
21	Estrategia y Cultura NEUSI Agile	Consolidar framework NEUSI Agile y cultura organizacional para el cierre 2025. Unificar metodología, ceremonias ágiles y tableros de evaluación global.	ACTIVA	ALTA	2025-10-21 11:19:15+00	2025-10-21 11:43:43.647+00	13	0	EPICA-008		2025-12-22	2025-11-01	Framework adoptado al 90% y documentado	18
22	Formación, Certificación y Desarrollo del Talento NEUSI	Fortalecer las competencias técnicas y estratégicas del equipo NEUSI mediante programas de formación. Consolidar un plan formativo integral.	ACTIVA	MEDIA	2025-10-21 11:19:15+00	2025-10-21 11:44:30.482+00	2	0	EPICA-009		2025-12-22	2025-10-14	≥80% de participación en formaciones y ≥2 certificaciones obtenidas	18
\.


--
-- Data for Name: backlog_epica_owners; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_epica_owners (id, epica_id, integrante_id) FROM stdin;
1	14	13
2	15	15
3	16	1
4	17	2
5	18	7
6	19	4
7	20	14
8	21	13
9	22	2
\.


--
-- Data for Name: backlog_epica_sprints; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_epica_sprints (id, epica_id, sprint_id) FROM stdin;
1	14	1
2	14	2
3	14	3
4	14	4
5	14	5
6	14	6
7	14	7
8	14	8
9	15	1
10	15	2
11	15	3
12	15	4
13	15	5
14	15	6
15	15	7
16	15	8
17	16	1
18	16	2
19	16	3
20	16	4
21	16	5
22	16	6
23	16	7
24	16	8
25	17	1
26	17	2
27	17	3
28	17	4
29	17	5
30	17	6
31	17	7
32	17	8
33	18	1
34	18	2
35	18	3
36	18	4
37	18	5
38	18	6
39	18	7
40	18	8
41	19	1
42	19	2
43	19	3
44	19	4
45	19	5
46	19	6
47	19	7
48	19	8
49	20	1
50	20	2
51	20	3
52	20	4
53	20	5
54	20	6
55	20	7
56	20	8
57	21	1
58	21	2
59	21	3
60	21	4
61	21	5
62	21	6
63	21	7
64	21	8
65	22	1
66	22	2
67	22	3
68	22	4
69	22	5
70	22	6
71	22	7
72	22	8
\.


--
-- Data for Name: backlog_evidencia; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_evidencia (id, comentario, archivo, tarea_id, actualizado_en, creado_en, creado_por_id) FROM stdin;
3	Se realiza cambio en logica por roles asignados. permisos de Admin, Visualizador y otros adaptado, se ajustan views generales y se adapta con la nueva logica.. queda pendiente se monte nuevamente la base ya que quedo con baches en la carga		211	2025-10-21 17:18:39.452+00	2025-10-21 17:18:39.452+00	10
4	Completado	evidencias/Configurar_entorno_PostgreSQL_y_archivo.pdf	165	2025-10-23 00:49:14.922105+00	2025-10-23 00:49:14.922096+00	10
\.


--
-- Data for Name: backlog_integrante; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_integrante (id, rol, user_id) FROM stdin;
1	Contadora General	2
2	Coordinadora de Gestión Humana y Administrativa	3
4	Líder Comercial	4
5	Especialista en Visualización y BI	5
6	Desarrollador Frontend	6
7	Coordinadora de Marketing y Comunicación	7
10	Scrum Master / PO	8
12	Desarrollador Backend	9
13	Arquitecto de Software y Director General	1
14	Desarrollador Backend	10
15	Product Owner Coofisam360	11
17	Administrador de Bases de Datos (DBA)	12
18	Miembro	13
\.


--
-- Data for Name: backlog_proyecto; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_proyecto (id, codigo, nombre, activo, creado_en, actualizado_en) FROM stdin;
4	NEUSI-001	Task Manager: Plataforma Interna de Gestión Ágil NEUSI v2.0	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
5	NEUSI-002	NeoSales: Sistema Integral de Ventas y Crecimiento Comercial	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
6	NEUSI-003	Coofisam360: Sistema Integral de Gestión Cooperativa	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
7	NEUSI-004	NEUADMIN: Sistema Integral de Gestión Humana, Administrativa y Mejora Continua	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
8	NEUSI-005	NEUVIBE: Sistema Integral de Marca, Comunicación y Crecimiento Digital	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
9	NEUSI-006	FinanzApp: Aplicación Inteligente para Finanzas Personales	f	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
10	NEUSI-007	GoodJob: Plataforma de Gestión para Trabajadores de Mantenimiento	f	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
11	NEUSI-008	UrbIA: Sistema de Monitoreo Ambiental con SDN y Edge Computing	t	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
12	NEUSI-009	NeusiBots: Implementación de Bots para Redes Sociales	f	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
13	NEUSI-010	WebScraping: Sistema de Extracción de Datos Financieros y Entidades	f	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
14	NEUSI-011	EduTech Kids: Plataforma de Programación para Niños con Impresión 3D	f	2025-10-21 11:10:05+00	2025-10-21 11:10:05+00
16	NEUSI-000	Arquitectura de Soluciones	t	2025-10-21 11:21:51.301+00	2025-10-21 11:21:51.301+00
17	NEUSI-012	NEUCONTA - Sistema Contable Financiero	t	2025-10-21 11:32:41.224+00	2025-10-21 11:32:41.224+00
18	NEUSI-013	NeusiVarios	t	2025-10-21 11:43:22.456+00	2025-10-21 11:43:22.456+00
\.


--
-- Data for Name: backlog_sprint; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_sprint (id, inicio, fin, nombre) FROM stdin;
1	2025-10-20	2025-10-27	Sprint 1
2	2025-10-28	2025-11-10	Sprint 2
3	2025-11-04	2025-12-10	Sprint 3
4	2025-11-11	2025-11-17	Sprint 4
5	2025-11-18	2025-11-24	Sprint 5
6	2025-11-25	2025-12-01	Sprint 6
7	2025-12-02	2025-12-08	Sprint 7
8	2025-12-09	2025-12-22	Sprint 8
\.


--
-- Data for Name: backlog_tarea; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_tarea (id, titulo, descripcion, categoria, completada, asignado_a_id, sprint_id, criterios_aceptacion, fecha_cierre, informe_cierre, estado, epica_id, esfuerzo_sp) FROM stdin;
146	Crear estructura documental y roles NEUSI	Como administradora, necesito crear la estructura documental y roles NEUSI para estandarizar la gestión. Incluye: Manual de Roles completo, organigrama actualizado y validación con Dirección.	UI	f	2	1	• Manual de Roles y Políticas Internas completado\r\n- Organigrama institucional actualizado con roles y responsabilidades\r\n- Documento validado y aprobado por Dirección General (Daniel)\r\n- Archivo PDF generado: "Manual_Roles_NEUSI.pdf"	\N		NUEVO	17	5
147	Levantar procesos administrativos actuales	Como administradora, necesito documentar todos los procesos administrativos actuales para identificar oportunidades de mejora y automatización.	NUI	f	2	1	• Listado completo de procesos administrativos documentado\r\n- Mapeo de flujos de trabajo actuales con diagramas\r\n- Identificación de cuellos de botella y procesos manuales\r\n- Documento de diagnóstico inicial entregado	\N		NUEVO	17	3
148	Estandarizar estructura de carpetas digitales	Como administradora, necesito estandarizar las carpetas digitales en Google Drive para organizar eficientemente toda la información administrativa y de talento humano.	NUI	f	2	1	• Estructura de carpetas definida y documentada\r\n- Nomenclatura estandarizada aplicada\r\n- Carpetas creadas en Google Drive con permisos configurados\r\n- Guía de uso de la estructura documental compartida	\N		NUEVO	17	2
149	Clasificar y migrar contratos y actas a KenDOCdata	Como administradora, necesito clasificar todos los contratos y actas existentes y migrarlos al sistema KenDOCdata para centralizar la gestión documental. Trabajo conjunto con Laura (Contabilidad).	NUI	f	2	1	• Todos los contratos clasificados por tipo y fecha\r\n- Actas organizadas cronológicamente\r\n- Documentos digitalizados y subidos a KenDOCdata\r\n- Índice de documentos migrados entregado\r\n- Validación con Laura Rivera completada	\N		NUEVO	17	3
150	Revisar y validar documentación administrativa existente	Como directora de NEUSI, necesito revisar toda la documentación administrativa existente para validar el estado actual y definir prioridades de mejora.	UI	f	13	1	• Inventario completo de documentación administrativa realizado\r\n- Reporte de gaps y documentos faltantes identificado\r\n- Priorización de documentos pendientes definida\r\n- Sesión de validación con Diana completada	\N		NUEVO	17	2
151	Auditoría de identidad visual actual de NEUSI	Como diseñadora de marca, necesito realizar una auditoría completa de la identidad visual actual de NEUSI para identificar oportunidades de mejora y modernización.	UI	f	7	1	• Documento de auditoría visual completado\r\n- Análisis de logo, colores, tipografía y materiales actuales\r\n- Benchmark con 3 empresas referentes del sector\r\n- Informe de hallazgos y recomendaciones entregado	\N		NUEVO	18	2
152	Definir paleta cromática y tipografía institucional	Como diseñadora de marca, necesito definir la nueva paleta de colores y tipografía de NEUSI que reflejen innovación, tecnología y cercanía.	UI	f	7	1	• Paleta cromática definida (colores primarios, secundarios y de apoyo)\r\n- Tipografía principal y secundaria seleccionada\r\n- Propuesta validada con Dirección General (Daniel)\r\n- Documento de especificaciones técnicas de color y tipografía	\N		NUEVO	18	3
153	Rediseñar logo NEUSI Solutions	Como diseñadora de marca, necesito rediseñar el logo de NEUSI Solutions para modernizar la percepción institucional y alinearla con la visión 2025-2026.	UI	f	7	1	• Mínimo 3 propuestas de rediseño de logo presentadas\r\n- Logo final aprobado por Dirección General\r\n- Versiones del logo: horizontal, vertical, isotipo, negativo\r\n- Archivos en formatos: SVG, PNG, AI, PDF\r\n- Manual de uso del logo (espacios, tamaños mínimos, usos incorrectos)	\N		NUEVO	18	5
154	Crear guía básica de uso de marca NEUSI	Como diseñadora institucional, necesito crear una guía de uso de marca que estandarice la aplicación de la identidad visual en todos los materiales.	UI	f	7	1	• Guía de marca con logo, colores, tipografía y aplicaciones\r\n- Ejemplos de uso correcto e incorrecto\r\n- Plantilla básica de presentación corporativa\r\n- Documento PDF "Guia_Marca_NEUSI_v1.pdf" entregado	\N		NUEVO	18	3
155	Presentar Brand Kit NEUSI en Figma/Canva	Como diseñadora de marca, necesito consolidar todos los elementos de identidad visual en un Brand Kit digital accesible para todo el equipo.	UI	f	7	1	• Brand Kit creado en Figma o Canva\r\n- Incluye: logo, colores, tipografía, iconografía básica\r\n- Enlace compartido con el equipo NEUSI\r\n- Presentación del Brand Kit en reunión de equipo	\N		NUEVO	18	2
156	Exportar balance general y estado de resultados desde Siigo Nube	Como contadora, necesito exportar urgentemente el balance general y estado de resultados 2025 desde Siigo Nube para presentarlo a Dirección esta semana.	UNI	f	1	1	• Balance General 2025 exportado en Excel\r\n- Estado de Resultados 2025 exportado en Excel\r\n- Archivos guardados en /NEUCONTA/URGENTE/Balance_y_Resultados_2025/\r\n- Validación preliminar de cifras completada	\N		NUEVO	16	5
157	Exportar plan de cuentas y terceros desde Siigo Nube	Como contadora, necesito exportar el plan de cuentas y base de terceros desde Siigo Nube para iniciar el proceso de migración a NEUCONTA.	UNI	f	1	1	• Plan de cuentas exportado sin errores\r\n- Base de terceros (clientes y proveedores) exportada\r\n- Archivos guardados en /NEUCONTA/LEVANTAMIENTO_2025/RAW_DATA/\r\n- Formato Excel validado	\N		NUEVO	16	3
158	Limpiar y depurar balance general y estado de resultados	Como contadora, necesito limpiar y depurar el balance y estado de resultados exportados, ajustando formatos y validando consistencia de cifras para presentación urgente.	UI	f	1	1	• Balance General con formato limpio y validado\r\n- Estado de Resultados con cifras consistentes\r\n- Ajustes de formato (fechas, números, nombres de cuentas) completados\r\n- Archivos listos para presentación a Dirección	\N		NUEVO	16	5
159	Elaborar y presentar informe financiero urgente	Como contadora, necesito consolidar el balance y estado de resultados en un informe ejecutivo para presentarlo a Dirección General esta semana.	UI	f	1	1	• Informe "Balance_y_Resultados_2025_Ejecutivo.pdf" elaborado\r\n- Presentación ejecutiva con análisis de cifras principales\r\n- Informe validado y presentado a Daniel (Dirección)\r\n- Archivo subido a carpeta de seguimiento	\N		NUEVO	16	2
160	Definición del embudo de ventas NEUSI	Como líder comercial, necesito diseñar y documentar el embudo de ventas institucional en Notion/Airtable, estableciendo etapas: Atracción → Calificación → Propuesta → Negociación → Cierre → Fidelización.	UI	f	4	1	• Documento visible y compartido con Dirección General\r\n- Cada etapa tiene criterios claros de avance\r\n- Embudo documentado en Notion con flujo completo\r\n- Validación con Daniel completada	\N		NUEVO	19	3
161	Creación de la base de leads calificados	Como líder comercial, necesito identificar y registrar al menos 15 clientes potenciales (educativo, cooperativo, público), priorizando contactos estratégicos.	UI	f	4	1	• Mínimo 15 leads registrados en base de datos\r\n- Base con campos completos: nombre, empresa, cargo, correo, teléfono\r\n- Segmentación por sector y prioridad (Alta, Media, Baja)\r\n- Leads validados como contactos estratégicos	\N		NUEVO	19	3
162	Activación de canales institucionales de contacto	Como líder comercial, necesito crear y configurar LinkedIn, WhatsApp Business y correo comercial con imagen corporativa NEUSI unificada. Trabajo conjunto con Daniela (Marketing).	UI	f	4	1	• LinkedIn corporativo activo y verificado\r\n- WhatsApp Business configurado con mensaje de bienvenida\r\n- Correo comercial @neusi.com activo\r\n- Descripción corporativa configurada en todos los canales\r\n- Coordinación completada con Daniela Mazuera	\N		NUEVO	19	3
163	Diseño inicial de materiales institucionales	Como líder comercial, necesito crear versiones preliminares de brochure y pitch deck institucional con contenido alineado a los servicios NEUSI. Trabajo conjunto con Daniela (Marketing).	NUI	f	4	1	• Brochure institucional preliminar creado (PDF o Canva)\r\n- Pitch deck institucional preliminar creado\r\n- 2 piezas gráficas revisadas por Dirección\r\n- Alineadas a la identidad visual NEUSI (colores, logo, mensaje)\r\n- Validación de Daniela completada	\N		NUEVO	19	3
164	Registro y reporte comercial semanal	Como líder comercial, necesito consolidar un reporte con avances de contactos, reuniones agendadas y observaciones para mantener informada a la Dirección.	NUI	f	4	1	• Reporte semanal elaborado con formato estándar NEUSI\r\n- Registro compartido en canal #proyectos-clientes\r\n- Incluye: contactos realizados, reuniones agendadas, observaciones\r\n- Documento validado por Dirección General	\N		NUEVO	19	3
166	Migrar datos desde SQLite a PostgreSQL	Como desarrollador backend, necesito exportar los datos de db.sqlite3 y cargarlos en PostgreSQL utilizando dumpdata y loaddata, verificando la integridad de relaciones y conteos por tabla.	NUI	f	14	1	• Datos exportados desde SQLite usando dumpdata\r\n- Datos importados a PostgreSQL usando loaddata\r\n- Conteo de registros en PostgreSQL coincide con SQLite\r\n- Relaciones ForeignKey se mantienen sin errores\r\n- Pruebas de integridad completadas exitosamente	\N		TODO	20	5
167	Implementar roles de usuario	Como desarrollador backend, necesito definir roles (Administrador, Colaborador, Invitado) con acceso diferenciado a los endpoints del backlog	UI	f	14	1	- Roles definidos: Administrador, Colaborador, Invitado\r\n- Roles restringen acceso desde panel y API correctamente	\N		APROBADO	20	3
168	Implementar respaldo y restauración PostgreSQL	Como desarrollador backend, necesito crear scripts backup_pg.sh y restore_pg.sh para respaldos automáticos mediante pg_dump, programados con cron y almacenados en /backups/.	UI	f	14	1	• Script backup_pg.sh creado y funcional\r\n- Script restore_pg.sh creado y funcional\r\n- Cron job configurado para respaldos automáticos\r\n- Respaldos almacenados en directorio /backups/\r\n- Respaldo y restauración verificados en entorno de prueba sin pérdida de datos	\N		APROBADO	20	2
169	Integrar vistas HTML con modelos del nuevo backend PostgreSQL	Como desarrollador frontend, necesito ajustar los templates y vistas (backlog_lista.html, home.html, tareas.html) para consumir datos del backend PostgreSQL modularizado por Jorge. Dependencia: espera finalización de tareas de migración PostgreSQL de Jorge.	UNI	f	10	1	• Templates ajustados: backlog_lista.html, home.html, tareas.html\r\n- Todas las vistas renderizan sin errores de ORM\r\n- Datos cargan correctamente desde PostgreSQL\r\n- Interfaz actual no se ve afectada negativamente\r\n- Coordinación completada con Jorge Cardona	\N		NUEVO	20	5
170	Actualizar plantillas con colores e identidad visual NEUSI	Como desarrollador frontend, necesito aplicar la nueva paleta de colores y elementos de identidad visual NEUSI a todas las plantillas del Task Manager para alinearlas con la imagen corporativa. Trabajo coordinado con Daniela (Marketing).	UI	f	\N	1	• Paleta de colores NEUSI aplicada en todas las plantillas\r\n- Logo NEUSI integrado en header/navbar\r\n- Tipografía corporativa aplicada consistentemente\r\n- Base.html actualizado con estilos globales NEUSI\r\n- Validación de Daniela Mazuera completada\r\n- Interfaz visualmente coherente con identidad NEUSI	\N		TODO	20	5
172	Documentar estructura y dependencias visuales del v1.1	Como desarrollador frontend, necesito registrar en docs/frontend_dependencias_v1_1.md qué templates dependen de qué vistas y qué modelos/URLs del backend para facilitar mantenimiento futuro.	NUI	f	10	1	• Documento docs/frontend_dependencias_v1_1.md creado\r\n- Describe al menos 3 relaciones directas (template → view → model)\r\n- Documento versionado en rama v1.1_monolito_front\r\n- Documentación validada por Dirección Técnica	\N		NUEVO	20	2
184	Validación arquitectónica del ecosistema COOFiSAM360	Como arquitecto, necesito validar compatibilidad Django-PostgreSQL-BI, revisar logs, dependencias y flujo completo de los 5 módulos en VM Coofisam.	UI	f	13	1	• Compatibilidad Django + PostgreSQL validada\r\n- Entorno virtual operativo\r\n- Logs sin errores críticos\r\n- Flujo completo de datos verificado\r\n- Dependencias documentadas\r\n- Sistema estable sin advertencias\r\n- Coordinación con todo el equipo completada	\N		NUEVO	21	3
185	Configurar roles y permisos por módulo	Como arquitecto, necesito definir y configurar roles de usuario con acceso diferenciado a cada módulo según estructura organizacional de Coofisam.	UI	f	\N	1	• Roles definidos: Admin, Gerente, Usuario, Auditor\r\n- Permisos configurados por módulo\r\n- Restricciones de acceso funcionando\r\n- Usuarios sin permisos reciben error 403\r\n- Matriz de permisos documentada	\N		NUEVO	21	2
186	Documentación técnica integral Sprint 1 COOFiSAM360	Como arquitecto, necesito elaborar documentación completa con arquitectura, pasos técnicos, validaciones y capturas de todos los módulos migrados.	UI	f	13	1	• Documento arquitectura del sistema completo\r\n- Pasos técnicos de migración documentados\r\n- Capturas de pantalla de validaciones\r\n- Evidencias en /evidencias/migracion_sprint1/\r\n- Diagrama de arquitectura actualizado\r\n- Documento validado por Coofisam y NEUSI\r\n- Archivado en repositorio Git	\N		NUEVO	21	3
201	Configurar Django y endpoints REST para Financiera y Talento	Como desarrollador backend, necesito configurar settings.py, .env y crear endpoints REST base /api/financiera/ y /api/talento/ con autenticación JWT.	UI	f	12	1	• settings.py configurado con PostgreSQL VM • Archivo .env con credenciales seguras • Migraciones ejecutadas correctamente • Endpoints /api/financiera/ funcionando • Endpoints /api/talento/ funcionando • Autenticación JWT operativa • API responde 200 OK en Postman	\N		NUEVO	21	3
202	Implementar endpoints REST /api/cartera/ y /api/credito/	Como desarrollador backend, necesito implementar API REST completa con autenticación JWT y métodos CRUD para Cartera y Crédito.	UI	f	12	1	• Endpoints /api/cartera/ con CRUD completo • Endpoints /api/credito/ con CRUD completo • Autenticación JWT validada • Todos los endpoints responden 200 OK • Datos se almacenan correctamente • Pruebas Postman documentadas	\N		NUEVO	21	\N
203	Desarrollar API /api/documentos/ con carga de archivos	Como desarrollador backend, necesito crear endpoint para carga, descarga y consulta de documentos con validaciones de tipo y tamaño.	UI	f	12	1	• Endpoint /api/documentos/ con CRUD • Carga de archivos funcionando • Validación de tipo de archivo (PDF, DOC, XLS) • Validación de tamaño (<10MB) • Descarga de archivos operativa • CRUD documentales funcional en Postman	\N		NUEVO	21	3
204	Crear interfaces Django para Financiera y Talento y Cultura	Como desarrollador frontend, necesito diseñar y desarrollar formularios y plantillas HTML para los módulos Financiera y Talento y Cultura.	UI	f	6	1	• Formularios Financiera operativos • Plantillas Talento y Cultura funcionales • Formularios conectados a backend PostgreSQL • Validaciones de campos implementadas • Interfaz responsive y coherente • Pruebas de usuario completadas	\N		NUEVO	21	3
205	Desarrollar formularios Django para Cartera y Crédito	Como desarrollador frontend, necesito crear formularios y vistas Django para registrar y consultar operaciones de Cartera y Crédito.	UI	f	6	1	• Formularios Cartera funcionales • Formularios Crédito operativos • Vistas de consulta implementadas • Formularios coherentes con backend • CRUD operativo desde interfaz • Estilo visual unificado	\N		NUEVO	21	3
206	Implementar interfaz de carga y gestión documental	Como desarrollador frontend, necesito crear interfaz visual para carga de archivos con validaciones, alertas y diseño responsive.	UI	f	6	1	• Interfaz de carga de archivos funcional • Validaciones visuales de tamaño y formato • Alertas de éxito/error implementadas • Lista de documentos cargados visible • Descarga de documentos operativa • Diseño responsive validado	\N		NUEVO	21	2
207	Crear Dashboard Power BI Indicadores Financieros y Talento	Como analista BI, necesito conectar Power BI a PostgreSQL VM Coofisam y crear visualización con KPIs de Financiera y Talento y Cultura.	UI	f	5	1	• Power BI conectado a PostgreSQL VM • Datasets Financiera y Talento validados • Dashboard con KPIs principales creado • Indicadores actualizados automáticamente • Visualizaciones coherentes y claras • Dashboard validado con datos reales	\N		NUEVO	21	3
208	Dashboard Power BI Cartera Crédito y Documentos	Como analista BI, necesito crear dashboard integrado con indicadores de Cartera, Crédito y estadísticas de Gestión Documental.	UI	f	5	1	• Dashboard Cartera con KPIs creado • Indicadores de Crédito visualizados • Métricas documentales incluidas • Conexión a vistas SQL optimizada • Dashboard actualizado en tiempo real • Validación con equipo Coofisam	\N		NUEVO	21	3
211	Ajustes Varios de desarrollo	Como desarrollador backend, necesito realizar ajustes y mejoras en el backend del NEUSI Task Manager para optimizar el rendimiento, corregir inconsistencias detectadas en las pruebas de integración, y preparar el sistema para la siguiente fase de desarrollo. Esto incluye refactorización de código, optimización de consultas, corrección de bugs menores y mejora de logs del sistema.	UI	f	14	1	1. Optimización de Consultas\r\n2. Refactorización de Código\r\n3. Corrección de Bugs\r\n4. Mejora de Logs\r\n5. Pruebas y Validación\r\n6. Performance	\N		EN_PROGRESO	20	5
212	Ajustes varios de frontend y optimización de interfaces del Task Manager	Como desarrollador frontend, necesito realizar ajustes y mejoras en las interfaces del NEUSI Task Manager para optimizar la experiencia de usuario, corregir inconsistencias visuales detectadas en las pruebas, y mejorar la responsividad del sistema. Esto incluye corrección de estilos, mejora de validaciones del lado del cliente, optimización de carga de páginas y estandarización de componentes visuales.	UI	f	10	1	1. Corrección de Estilos y Consistencia Visual\r\n2. Responsividad y Adaptabilidad\r\n3. Validaciones del Cliente\r\n4. Optimización de Carga\r\n5. Experiencia de Usuario (UX)\r\n6. Corrección de Bugs Visuales\r\n7. Accesibilidad Básica\r\n8. Documentación y Pruebas	\N		NUEVO	20	5
213	Gestionar inscripción del equipo al programa "Finanzas para Aprender" de Cámara de Comercio	Como Coordinadora de Gestión Humana y Administrativa, necesito inscribir al equipo NEUSI en el programa de capacitación "Finanzas para Aprender" ofrecido por la Cámara de Comercio, coordinando fechas, horarios y logística para asegurar la participación del equipo en esta formación financiera que fortalecerá nuestras competencias en gestión empresarial.	UNI	f	2	1	Investigación y Registro\r\nCoordinación con el Equipo\r\nLogística y Recursos\r\nSeguimiento y Documentación\r\nComunicación\r\nInformación Adicional	\N		NUEVO	22	3
214	Consolidar y distribuir videos de todas las sesiones anteriores de Cámara de Comercio	Como Coordinadora de Gestión Humana y Administrativa, necesito recopilar, organizar y consolidar todos los videos de las capacitaciones previas realizadas con la Cámara de Comercio, crear una biblioteca digital accesible para todo el equipo y asegurar que este material de aprendizaje esté disponible para referencia futura y para nuevos integrantes.	UNI	f	2	1	Recopilación de Material\r\nOrganización y Estructura\r\nProcesamiento de Videos\r\nDistribución y Acceso\r\nDocumentación\r\nPreservación y Backup	\N		NUEVO	17	5
215	Identificar y recomendar cursos de capacitación específicos para cada miembro del equipo	Como Coordinadora de Gestión Humana y Administrativa, necesito realizar un diagnóstico de necesidades de capacitación del equipo NEUSI, investigar cursos y programas de formación disponibles (gratuitos y pagos) y crear un plan de capacitación personalizado para cada integrante según su rol, nivel de experiencia y objetivos de desarrollo profesional.	NUI	f	2	1	Diagnóstico de Necesidades\r\nInvestigación de Cursos\r\nEvaluación de Opciones\r\nPlan de Capacitación Personalizado\r\nConsolidación y Presentación\r\nSeguimiento y Métricas	\N		NUEVO	17	5
216	Ejecutar tareas varias asignadas por Dirección General	Como Coordinadora de Gestión Humana y Administrativa, necesito ejecutar diversas tareas delegadas por la Dirección General (Daniel Campos) que incluyen gestiones administrativas, coordinación organizacional, asuntos personales de dirección, trámites institucionales y otras actividades de apoyo que requieren seguimiento y ejecución durante el sprint. Estas tareas son de naturaleza variada y pueden surgir según las necesidades operativas de NEUSI y del Director General.	UI	f	2	1	Gestión Administrativa\r\nCoordinación Organizacional\r\nGestión Institucional\r\nApoyo Personal a Dirección\r\nCompras y Logística\r\nRecursos Humanos\r\nSeguimiento y Comunicación\r\nDocumentación	\N		NUEVO	17	5
217	Corrección de tabla de cupos de crédito y ajustes de codificación en tabla de presupuesto	Como desarrollador de base de datos, necesito corregir los tipos de datos y codificación de caracteres en la tabla cupos_credito y en la tabla presupuesto, para  evitar errores de interpretación con tildes y caracteres especiales, garantizando integridad y legibilidad de los datos financieros.	UI	f	17	1	* Se verifica que la tabla cupos_credito tenga tipos de datos coherentes con los campos requeridos por el sistema financiero.\r\n* Los campos tipo character varying aceptan correctamente tildes y caracteres especiales.\r\n* Se comprueba la correcta visualización de los datos en los módulos de interfaz (Power BI y Django).\r\n* Se documentan los cambios en un archivo SQL versionado (ajustes_bd_financiero.sql).	\N		NUEVO	15	5
218	Contenerizar el módulo de base de datos del sistema financiero.	Como desarrollador de base de datos, necesito dockerizar el módulo financiero, incluyendo la base de datos y sus dependencias, para garantizar portabilidad, replicabilidad y despliegue controlado en los entornos de desarrollo, pruebas y producción.	UI	f	17	1	* Se crea un Dockerfile y un docker-compose.yml con configuración de PostgreSQL y volúmenes persistentes.\r\n* Se definen variables de entorno (.env) para credenciales y rutas seguras.\r\n* El contenedor se ejecuta correctamente con los datos de prueba del módulo financiero.\r\n* Documentación clara del proceso en /docs/docker_financiero.md.	\N		NUEVO	15	3
219	Diseño y creación de estructura de base de datos para Cartera y Crédito.	Como desarrollador de base de datos, necesito diseñar, normalizar y crear las tablas y relaciones para los módulos de cartera y crédito, con el fin de integrar estos subsistemas dentro del esquema general financiero y permitir análisis consistentes en los reportes y dashboards.	UI	f	17	1	* Se entrega modelo entidad-relación (MER) actualizado en formato .png y .sql.\r\n* Se crean las tablas cartera, detalle_cartera, credito, historial_credito, etc., con claves primarias, foráneas e índices.\r\n* Se garantiza compatibilidad con los módulos de usuarios y transacciones.\r\n* Se realizan pruebas de inserción, actualización y eliminación sin errores.	\N		NUEVO	15	3
220	Validar la migración completa del módulo financiero a la máquina virtual designada.	Como desarrollador de base de datos, necesito validar junto con Daniel la correcta migración del módulo financiero a la máquina virtual de COOFISAM, para asegurar integridad de datos, conexión estable y correcto funcionamiento de los servicios dependientes*.	UI	f	17	1	* Se verifica la restauración de la base de datos en la VM sin pérdida de registros.\r\n* Se comprueba conectividad desde los módulos frontend y backend.\r\n* Se documentan rutas de conexión, credenciales y logs de migración.\r\n* Se realiza una prueba funcional con los usuarios de Finanzas y Contabilidad.	\N		NUEVO	15	5
165	Configurar entorno PostgreSQL y archivo .env	Como desarrollador backend, necesito instalar PostgreSQL en el servidor .101, crear base neusitaskmanager_db, usuario y contraseña seguras, y ajustar settings.py para conectar mediante .env usando psycopg2.	NUI	f	14	1	• PostgreSQL instalado y corriendo en servidor .101\r\n- Base de datos neusitaskmanager_db creada\r\n- Usuario y contraseña configurados de forma segura\r\n- Archivo .env configurado con credenciales\r\n- python manage.py migrate ejecuta sin errores\r\n- Tablas creadas correctamente en PostgreSQL (verificado con \\dt)	\N		EN_PROGRESO	20	5
\.


--
-- Data for Name: backlog_tarea_asignados; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.backlog_tarea_asignados (id, tarea_id, integrante_id) FROM stdin;
1	146	2
2	147	2
3	148	2
4	149	2
5	150	13
6	151	7
7	152	7
8	153	7
9	154	7
10	155	7
11	156	1
12	157	1
13	158	1
14	159	1
15	160	4
16	161	4
17	162	4
18	163	4
19	164	4
20	165	14
21	166	14
22	167	14
23	168	14
24	169	10
25	172	10
26	184	13
27	186	13
28	201	12
29	202	12
30	203	12
31	204	6
32	205	6
33	206	6
34	207	5
35	208	5
36	211	14
37	212	10
38	213	2
39	214	2
40	215	2
41	216	2
42	217	17
43	218	17
44	219	17
45	220	17
\.


--
-- Data for Name: disponibilidad_disponibilidaddia; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.disponibilidad_disponibilidaddia (id, dia_semana, tipo, hora_inicio, hora_fin, notas, disponibilidad_id) FROM stdin;
1	0	N	\N	\N		18
2	1	N	\N	\N		18
3	2	N	\N	\N		18
4	3	N	\N	\N		18
5	4	N	\N	\N		18
6	5	N	\N	\N		18
7	6	N	\N	\N		18
8	0	N	\N	\N		19
9	1	N	\N	\N		19
10	2	N	\N	\N		19
11	3	N	\N	\N		19
12	4	N	\N	\N		19
13	5	N	\N	\N		19
14	6	N	\N	\N		19
15	0	N	\N	\N		20
16	1	N	\N	\N		20
17	2	N	\N	\N		20
18	3	N	\N	\N		20
19	4	N	\N	\N		20
20	5	N	\N	\N		20
21	6	N	\N	\N		20
22	0	N	\N	\N		21
23	1	N	\N	\N		21
24	2	N	\N	\N		21
25	3	N	\N	\N		21
26	4	N	\N	\N		21
27	5	N	\N	\N		21
28	6	N	\N	\N		21
29	0	N	\N	\N		22
30	1	N	\N	\N		22
31	2	N	\N	\N		22
32	3	N	\N	\N		22
33	4	N	\N	\N		22
34	5	N	\N	\N		22
35	6	N	\N	\N		22
36	0	N	\N	\N		15
37	1	N	\N	\N		15
38	2	N	\N	\N		15
39	3	N	\N	\N		15
40	4	N	\N	\N		15
41	5	N	\N	\N		15
42	6	N	\N	\N		15
43	0	N	\N	\N		23
44	1	N	\N	\N		23
45	2	N	\N	\N		23
46	3	N	\N	\N		23
47	4	N	\N	\N		23
48	5	N	\N	\N		23
49	6	N	\N	\N		23
50	0	N	\N	\N		24
51	1	N	\N	\N		24
52	2	N	\N	\N		24
53	3	N	\N	\N		24
54	4	N	\N	\N		24
55	5	N	\N	\N		24
56	6	N	\N	\N		24
57	0	N	\N	\N		25
58	1	N	\N	\N		25
59	2	N	\N	\N		25
60	3	N	\N	\N		25
61	4	N	\N	\N		25
62	5	N	\N	\N		25
63	6	N	\N	\N		25
64	0	N	\N	\N		26
65	1	N	\N	\N		26
66	2	N	\N	\N		26
67	3	N	\N	\N		26
68	4	N	\N	\N		26
69	5	N	\N	\N		26
70	6	N	\N	\N		26
71	0	N	\N	\N		17
72	1	N	\N	\N		17
73	2	R	19:00:00	21:00:00		17
74	3	R	19:00:00	21:00:00		17
75	4	R	19:00:00	21:00:00		17
76	5	R	19:00:00	21:00:00		17
77	6	R	15:00:00	17:00:00		17
78	0	N	\N	\N		16
79	1	N	\N	\N		16
80	2	N	\N	\N		16
81	3	N	\N	\N		16
82	4	N	\N	\N		16
83	5	N	\N	\N		16
84	6	N	\N	\N		16
85	0	N	\N	\N		27
86	1	N	\N	\N		27
87	2	N	\N	\N		27
88	3	N	\N	\N		27
89	4	N	\N	\N		27
90	5	N	\N	\N		27
91	6	N	\N	\N		27
92	0	N	\N	\N		28
93	1	N	\N	\N		28
94	2	N	\N	\N		28
95	3	N	\N	\N		28
96	4	N	\N	\N		28
97	5	N	\N	\N		28
98	6	N	\N	\N		28
\.


--
-- Data for Name: disponibilidad_disponibilidadsemanal; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.disponibilidad_disponibilidadsemanal (id, semana_inicio, creado, actualizado, usuario_id) FROM stdin;
1	2025-09-29	2025-09-30 13:55:22.799+00	2025-09-30 13:55:22.799+00	4
2	2025-09-29	2025-09-30 14:09:35.004+00	2025-09-30 14:09:35.004+00	1
4	2025-09-29	2025-09-30 14:17:20.286+00	2025-09-30 14:17:20.286+00	2
5	2025-09-29	2025-09-30 14:24:44.587+00	2025-09-30 14:24:44.587+00	6
6	2025-09-29	2025-09-30 14:24:56.885+00	2025-09-30 14:24:56.885+00	8
8	2025-09-29	2025-10-02 19:04:36.192+00	2025-10-02 19:04:36.192+00	9
9	2025-09-29	2025-10-04 13:00:55.356+00	2025-10-04 13:00:55.356+00	5
10	2025-10-06	2025-10-06 14:14:42.314+00	2025-10-06 14:14:42.314+00	4
11	2025-10-06	2025-10-06 17:22:59.902+00	2025-10-06 17:22:59.902+00	8
12	2025-10-06	2025-10-11 18:32:17.936+00	2025-10-11 18:32:17.936+00	10
13	2025-10-13	2025-10-14 12:57:20.991+00	2025-10-14 12:57:20.991+00	10
14	2025-10-13	2025-10-16 00:15:47.753+00	2025-10-16 00:15:47.753+00	1
15	2025-10-20	2025-10-20 15:16:34.573+00	2025-10-20 15:16:34.574+00	4
16	2025-10-20	2025-10-20 18:39:28.364+00	2025-10-20 18:39:28.364+00	8
17	2025-10-20	2025-10-21 16:03:08.7+00	2025-10-21 16:03:08.7+00	10
18	2025-10-20	2025-10-21 21:23:21.975+00	2025-10-21 21:23:21.975+00	3
19	2025-10-27	2025-10-21 21:49:18.429+00	2025-10-21 21:49:18.429+00	3
20	2025-10-20	2025-10-21 22:39:06.269+00	2025-10-21 22:39:06.269+00	11
21	2025-10-20	2025-10-21 22:39:06.289+00	2025-10-21 22:39:06.289+00	13
22	2025-10-20	2025-10-21 22:39:06.309+00	2025-10-21 22:39:06.309+00	5
23	2025-10-20	2025-10-21 22:39:06.341+00	2025-10-21 22:39:06.341+00	6
24	2025-10-20	2025-10-21 22:39:06.361+00	2025-10-21 22:39:06.361+00	1
25	2025-10-20	2025-10-21 22:39:06.378+00	2025-10-21 22:39:06.378+00	7
26	2025-10-20	2025-10-21 22:39:06.396+00	2025-10-21 22:39:06.396+00	12
27	2025-10-20	2025-10-21 22:39:06.443+00	2025-10-21 22:39:06.443+00	2
28	2025-10-20	2025-10-21 22:39:06.459+00	2025-10-21 22:39:06.459+00	9
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	backlog	sprint
2	backlog	integrante
3	backlog	tarea
4	backlog	evidencia
5	backlog	daily
6	backlog	epica
7	backlog	proyecto
8	admin	logentry
9	auth	permission
10	auth	group
11	auth	user
12	contenttypes	contenttype
13	sessions	session
14	disponibilidad	disponibilidadsemanal
15	disponibilidad	disponibilidaddia
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-10-23 00:07:02.427386+00
2	auth	0001_initial	2025-10-23 00:07:02.477796+00
3	admin	0001_initial	2025-10-23 00:07:02.489626+00
4	admin	0002_logentry_remove_auto_add	2025-10-23 00:07:02.493586+00
5	admin	0003_logentry_add_action_flag_choices	2025-10-23 00:07:02.497314+00
6	contenttypes	0002_remove_content_type_name	2025-10-23 00:07:02.505905+00
7	auth	0002_alter_permission_name_max_length	2025-10-23 00:07:02.510032+00
8	auth	0003_alter_user_email_max_length	2025-10-23 00:07:02.514937+00
9	auth	0004_alter_user_username_opts	2025-10-23 00:07:02.518579+00
10	auth	0005_alter_user_last_login_null	2025-10-23 00:07:02.52257+00
11	auth	0006_require_contenttypes_0002	2025-10-23 00:07:02.523603+00
12	auth	0007_alter_validators_add_error_messages	2025-10-23 00:07:02.527189+00
13	auth	0008_alter_user_username_max_length	2025-10-23 00:07:02.533528+00
14	auth	0009_alter_user_last_name_max_length	2025-10-23 00:07:02.53764+00
15	auth	0010_alter_group_name_max_length	2025-10-23 00:07:02.542125+00
16	auth	0011_update_proxy_permissions	2025-10-23 00:07:02.545859+00
17	auth	0012_alter_user_first_name_max_length	2025-10-23 00:07:02.550152+00
18	backlog	0001_initial	2025-10-23 00:07:02.580404+00
19	backlog	0002_daily	2025-10-23 00:07:02.593704+00
20	backlog	0003_alter_daily_unique_together_daily_hora_and_more	2025-10-23 00:07:02.610131+00
21	backlog	0004_tarea_criterios_aceptacion_tarea_fecha_cierre_and_more	2025-10-23 00:07:02.621818+00
22	backlog	0005_remove_evidencia_fecha_evidencia_actualizado_en_and_more	2025-10-23 00:07:02.642942+00
23	backlog	0006_daily_fuera_horario	2025-10-23 00:07:02.6469+00
24	backlog	0007_sprint_nombre	2025-10-23 00:07:02.649325+00
25	backlog	0008_tarea_estado	2025-10-23 00:07:02.653893+00
26	backlog	0009_epica_tarea_epica	2025-10-23 00:07:02.676543+00
27	backlog	0010_remove_epica_sprint_epica_sprints	2025-10-23 00:07:02.698028+00
28	backlog	0011_tarea_esfuerzo_sp	2025-10-23 00:07:02.703735+00
29	backlog	0012_epica_proyecto_campos_nuevos	2025-10-23 00:07:02.746251+00
30	backlog	0013_tarea_asignados_alter_tarea_asignado_a	2025-10-23 00:07:02.769723+00
31	backlog	0014_epica_owners	2025-10-23 00:07:02.791791+00
32	backlog	0015_alter_integrante_rol_alter_integrante_user	2025-10-23 00:07:02.807076+00
33	backlog	0016_alter_daily_options_alter_epica_options_and_more	2025-10-23 00:07:02.839351+00
34	disponibilidad	0001_initial	2025-10-23 00:07:02.869429+00
35	disponibilidad	0002_alter_disponibilidadsemanal_options_and_more	2025-10-23 00:07:02.92341+00
36	disponibilidad	0003_alter_disponibilidaddia_options_and_more	2025-10-23 00:07:02.931608+00
37	sessions	0001_initial	2025-10-23 00:07:02.938514+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: jorge_user
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
l6tzp9adgcgibc83slaekkwu1e8otwoo	.eJxVjMEOwiAQRP-FsyFAWCgevfsNZGEXqRqalPbU-O-2SQ96m8x7M5uIuC41rp3nOJK4Cq3E5bdMmF_cDkJPbI9J5qkt85jkociTdnmfiN-30_07qNjrvuYBQ1DGGgJXMIMvnvweQ3aA1hNqCwMqMIV0UWQKZOeYGYJFNJTE5wsLjTih:1vBj6F:vka99bybDEZX5Hrv0uG1yENykJAJolOlTTUP0oq4ysE	2025-11-06 00:22:39.842704+00
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 60, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 13, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: backlog_daily_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_daily_id_seq', 119, true);


--
-- Name: backlog_epica_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_epica_id_seq', 22, true);


--
-- Name: backlog_epica_owners_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_epica_owners_id_seq', 9, true);


--
-- Name: backlog_epica_sprints_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_epica_sprints_id_seq', 72, true);


--
-- Name: backlog_evidencia_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_evidencia_id_seq', 4, true);


--
-- Name: backlog_integrante_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_integrante_id_seq', 18, true);


--
-- Name: backlog_proyecto_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_proyecto_id_seq', 18, true);


--
-- Name: backlog_sprint_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_sprint_id_seq', 8, true);


--
-- Name: backlog_tarea_asignados_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_tarea_asignados_id_seq', 45, true);


--
-- Name: backlog_tarea_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.backlog_tarea_id_seq', 220, true);


--
-- Name: disponibilidad_disponibilidaddia_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.disponibilidad_disponibilidaddia_id_seq', 98, true);


--
-- Name: disponibilidad_disponibilidadsemanal_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.disponibilidad_disponibilidadsemanal_id_seq', 28, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 15, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: jorge_user
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 37, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: backlog_daily backlog_daily_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_daily
    ADD CONSTRAINT backlog_daily_pkey PRIMARY KEY (id);


--
-- Name: backlog_epica backlog_epica_codigo_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica
    ADD CONSTRAINT backlog_epica_codigo_key UNIQUE (codigo);


--
-- Name: backlog_epica_owners backlog_epica_owners_epica_id_integrante_id_031b6ed3_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_owners
    ADD CONSTRAINT backlog_epica_owners_epica_id_integrante_id_031b6ed3_uniq UNIQUE (epica_id, integrante_id);


--
-- Name: backlog_epica_owners backlog_epica_owners_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_owners
    ADD CONSTRAINT backlog_epica_owners_pkey PRIMARY KEY (id);


--
-- Name: backlog_epica backlog_epica_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica
    ADD CONSTRAINT backlog_epica_pkey PRIMARY KEY (id);


--
-- Name: backlog_epica_sprints backlog_epica_sprints_epica_id_sprint_id_d7c52cdd_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_sprints
    ADD CONSTRAINT backlog_epica_sprints_epica_id_sprint_id_d7c52cdd_uniq UNIQUE (epica_id, sprint_id);


--
-- Name: backlog_epica_sprints backlog_epica_sprints_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_sprints
    ADD CONSTRAINT backlog_epica_sprints_pkey PRIMARY KEY (id);


--
-- Name: backlog_epica backlog_epica_titulo_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica
    ADD CONSTRAINT backlog_epica_titulo_key UNIQUE (titulo);


--
-- Name: backlog_evidencia backlog_evidencia_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_evidencia
    ADD CONSTRAINT backlog_evidencia_pkey PRIMARY KEY (id);


--
-- Name: backlog_integrante backlog_integrante_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_integrante
    ADD CONSTRAINT backlog_integrante_pkey PRIMARY KEY (id);


--
-- Name: backlog_integrante backlog_integrante_user_id_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_integrante
    ADD CONSTRAINT backlog_integrante_user_id_key UNIQUE (user_id);


--
-- Name: backlog_proyecto backlog_proyecto_codigo_key; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_proyecto
    ADD CONSTRAINT backlog_proyecto_codigo_key UNIQUE (codigo);


--
-- Name: backlog_proyecto backlog_proyecto_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_proyecto
    ADD CONSTRAINT backlog_proyecto_pkey PRIMARY KEY (id);


--
-- Name: backlog_sprint backlog_sprint_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_sprint
    ADD CONSTRAINT backlog_sprint_pkey PRIMARY KEY (id);


--
-- Name: backlog_tarea_asignados backlog_tarea_asignados_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea_asignados
    ADD CONSTRAINT backlog_tarea_asignados_pkey PRIMARY KEY (id);


--
-- Name: backlog_tarea_asignados backlog_tarea_asignados_tarea_id_integrante_id_8bb55445_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea_asignados
    ADD CONSTRAINT backlog_tarea_asignados_tarea_id_integrante_id_8bb55445_uniq UNIQUE (tarea_id, integrante_id);


--
-- Name: backlog_tarea backlog_tarea_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea
    ADD CONSTRAINT backlog_tarea_pkey PRIMARY KEY (id);


--
-- Name: disponibilidad_disponibilidaddia disponibilidad_disponibi_disponibilidad_id_dia_se_85aaf9f6_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidaddia
    ADD CONSTRAINT disponibilidad_disponibi_disponibilidad_id_dia_se_85aaf9f6_uniq UNIQUE (disponibilidad_id, dia_semana);


--
-- Name: disponibilidad_disponibilidadsemanal disponibilidad_disponibi_usuario_id_semana_inicio_cbbc2dba_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidadsemanal
    ADD CONSTRAINT disponibilidad_disponibi_usuario_id_semana_inicio_cbbc2dba_uniq UNIQUE (usuario_id, semana_inicio);


--
-- Name: disponibilidad_disponibilidaddia disponibilidad_disponibilidaddia_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidaddia
    ADD CONSTRAINT disponibilidad_disponibilidaddia_pkey PRIMARY KEY (id);


--
-- Name: disponibilidad_disponibilidadsemanal disponibilidad_disponibilidadsemanal_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidadsemanal
    ADD CONSTRAINT disponibilidad_disponibilidadsemanal_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: backlog_daily_integrante_id_349269b6; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_daily_integrante_id_349269b6 ON public.backlog_daily USING btree (integrante_id);


--
-- Name: backlog_epica_codigo_83edd484_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_codigo_83edd484_like ON public.backlog_epica USING btree (codigo varchar_pattern_ops);


--
-- Name: backlog_epica_owner_id_deec0034; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_owner_id_deec0034 ON public.backlog_epica USING btree (owner_id);


--
-- Name: backlog_epica_owners_epica_id_aa11b1ad; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_owners_epica_id_aa11b1ad ON public.backlog_epica_owners USING btree (epica_id);


--
-- Name: backlog_epica_owners_integrante_id_c6128d8f; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_owners_integrante_id_c6128d8f ON public.backlog_epica_owners USING btree (integrante_id);


--
-- Name: backlog_epica_proyecto_id_8e6c3404; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_proyecto_id_8e6c3404 ON public.backlog_epica USING btree (proyecto_id);


--
-- Name: backlog_epica_sprints_epica_id_f7aa5506; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_sprints_epica_id_f7aa5506 ON public.backlog_epica_sprints USING btree (epica_id);


--
-- Name: backlog_epica_sprints_sprint_id_88c28869; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_sprints_sprint_id_88c28869 ON public.backlog_epica_sprints USING btree (sprint_id);


--
-- Name: backlog_epica_titulo_133d94ee_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_epica_titulo_133d94ee_like ON public.backlog_epica USING btree (titulo varchar_pattern_ops);


--
-- Name: backlog_evidencia_creado_por_id_515d5490; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_evidencia_creado_por_id_515d5490 ON public.backlog_evidencia USING btree (creado_por_id);


--
-- Name: backlog_evidencia_tarea_id_1b3b7272; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_evidencia_tarea_id_1b3b7272 ON public.backlog_evidencia USING btree (tarea_id);


--
-- Name: backlog_proyecto_codigo_743dd003_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_proyecto_codigo_743dd003_like ON public.backlog_proyecto USING btree (codigo varchar_pattern_ops);


--
-- Name: backlog_tarea_asignado_a_id_adbce6b9; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_tarea_asignado_a_id_adbce6b9 ON public.backlog_tarea USING btree (asignado_a_id);


--
-- Name: backlog_tarea_asignados_integrante_id_3933da79; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_tarea_asignados_integrante_id_3933da79 ON public.backlog_tarea_asignados USING btree (integrante_id);


--
-- Name: backlog_tarea_asignados_tarea_id_ad5b9b10; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_tarea_asignados_tarea_id_ad5b9b10 ON public.backlog_tarea_asignados USING btree (tarea_id);


--
-- Name: backlog_tarea_epica_id_17989765; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_tarea_epica_id_17989765 ON public.backlog_tarea USING btree (epica_id);


--
-- Name: backlog_tarea_sprint_id_a7cd1ca5; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX backlog_tarea_sprint_id_a7cd1ca5 ON public.backlog_tarea USING btree (sprint_id);


--
-- Name: disponibilidad_disponibilidaddia_disponibilidad_id_4595860c; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX disponibilidad_disponibilidaddia_disponibilidad_id_4595860c ON public.disponibilidad_disponibilidaddia USING btree (disponibilidad_id);


--
-- Name: disponibilidad_disponibilidadsemanal_usuario_id_51ea93dc; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX disponibilidad_disponibilidadsemanal_usuario_id_51ea93dc ON public.disponibilidad_disponibilidadsemanal USING btree (usuario_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: jorge_user
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_daily backlog_daily_integrante_id_349269b6_fk_backlog_integrante_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_daily
    ADD CONSTRAINT backlog_daily_integrante_id_349269b6_fk_backlog_integrante_id FOREIGN KEY (integrante_id) REFERENCES public.backlog_integrante(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica backlog_epica_owner_id_deec0034_fk_backlog_integrante_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica
    ADD CONSTRAINT backlog_epica_owner_id_deec0034_fk_backlog_integrante_id FOREIGN KEY (owner_id) REFERENCES public.backlog_integrante(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica_owners backlog_epica_owners_epica_id_aa11b1ad_fk_backlog_epica_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_owners
    ADD CONSTRAINT backlog_epica_owners_epica_id_aa11b1ad_fk_backlog_epica_id FOREIGN KEY (epica_id) REFERENCES public.backlog_epica(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica_owners backlog_epica_owners_integrante_id_c6128d8f_fk_backlog_i; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_owners
    ADD CONSTRAINT backlog_epica_owners_integrante_id_c6128d8f_fk_backlog_i FOREIGN KEY (integrante_id) REFERENCES public.backlog_integrante(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica backlog_epica_proyecto_id_8e6c3404_fk_backlog_proyecto_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica
    ADD CONSTRAINT backlog_epica_proyecto_id_8e6c3404_fk_backlog_proyecto_id FOREIGN KEY (proyecto_id) REFERENCES public.backlog_proyecto(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica_sprints backlog_epica_sprints_epica_id_f7aa5506_fk_backlog_epica_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_sprints
    ADD CONSTRAINT backlog_epica_sprints_epica_id_f7aa5506_fk_backlog_epica_id FOREIGN KEY (epica_id) REFERENCES public.backlog_epica(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_epica_sprints backlog_epica_sprints_sprint_id_88c28869_fk_backlog_sprint_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_epica_sprints
    ADD CONSTRAINT backlog_epica_sprints_sprint_id_88c28869_fk_backlog_sprint_id FOREIGN KEY (sprint_id) REFERENCES public.backlog_sprint(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_evidencia backlog_evidencia_creado_por_id_515d5490_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_evidencia
    ADD CONSTRAINT backlog_evidencia_creado_por_id_515d5490_fk_auth_user_id FOREIGN KEY (creado_por_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_evidencia backlog_evidencia_tarea_id_1b3b7272_fk_backlog_tarea_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_evidencia
    ADD CONSTRAINT backlog_evidencia_tarea_id_1b3b7272_fk_backlog_tarea_id FOREIGN KEY (tarea_id) REFERENCES public.backlog_tarea(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_integrante backlog_integrante_user_id_024b289d_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_integrante
    ADD CONSTRAINT backlog_integrante_user_id_024b289d_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_tarea_asignados backlog_tarea_asigna_integrante_id_3933da79_fk_backlog_i; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea_asignados
    ADD CONSTRAINT backlog_tarea_asigna_integrante_id_3933da79_fk_backlog_i FOREIGN KEY (integrante_id) REFERENCES public.backlog_integrante(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_tarea backlog_tarea_asignado_a_id_adbce6b9_fk_backlog_integrante_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea
    ADD CONSTRAINT backlog_tarea_asignado_a_id_adbce6b9_fk_backlog_integrante_id FOREIGN KEY (asignado_a_id) REFERENCES public.backlog_integrante(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_tarea_asignados backlog_tarea_asignados_tarea_id_ad5b9b10_fk_backlog_tarea_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea_asignados
    ADD CONSTRAINT backlog_tarea_asignados_tarea_id_ad5b9b10_fk_backlog_tarea_id FOREIGN KEY (tarea_id) REFERENCES public.backlog_tarea(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_tarea backlog_tarea_epica_id_17989765_fk_backlog_epica_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea
    ADD CONSTRAINT backlog_tarea_epica_id_17989765_fk_backlog_epica_id FOREIGN KEY (epica_id) REFERENCES public.backlog_epica(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: backlog_tarea backlog_tarea_sprint_id_a7cd1ca5_fk_backlog_sprint_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.backlog_tarea
    ADD CONSTRAINT backlog_tarea_sprint_id_a7cd1ca5_fk_backlog_sprint_id FOREIGN KEY (sprint_id) REFERENCES public.backlog_sprint(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: disponibilidad_disponibilidaddia disponibilidad_dispo_disponibilidad_id_4595860c_fk_disponibi; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidaddia
    ADD CONSTRAINT disponibilidad_dispo_disponibilidad_id_4595860c_fk_disponibi FOREIGN KEY (disponibilidad_id) REFERENCES public.disponibilidad_disponibilidadsemanal(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: disponibilidad_disponibilidadsemanal disponibilidad_dispo_usuario_id_51ea93dc_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.disponibilidad_disponibilidadsemanal
    ADD CONSTRAINT disponibilidad_dispo_usuario_id_51ea93dc_fk_auth_user FOREIGN KEY (usuario_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: jorge_user
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT ALL ON SCHEMA public TO jorge_user;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO jorge_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO jorge_user;


--
-- PostgreSQL database dump complete
--

\unrestrict M6LU1TEjhYxSNPFpifHr3kZqfbylbhj34PSeIoQCkBEqQusnJQdNXCzlnK7iEwh

